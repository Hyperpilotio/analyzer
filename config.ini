[MONGODB]
#HOST = afb6bd49687d511e7ac8c0a7afc125fc-1583705535.us-east-1.elb.amazonaws.com
#HOST = mongo-serve
HOST = localhost
PORT = 27017
USERNAME = analyzer
PASSWORD = hyperpilot
RESULT_DB_NAME = resultdb
# Change LOGLEVEL to DEBUG to show logs when performing Mongo queries
LOGLEVEL = INFO

[JOBS]
JOB_COLLECTION = jobs
LOGLEVEL = DEBUG
WORKER_SIZE = 5

[INFLUXDB]
HOST = influxsrv
PORT = 8086
USERNAME = root
PASSWORD = root
APP_DB_NAME = snap
RAW_DB_NAME = snapaverage
RESULT_DB_NAME = diagnosisresults
DERIVED_METRIC_DB_NAME = derivedmetrics
SIZING_INPUT_DB_NAME = prometheus
SIZING_OUTPUT_DB_NAME = sizingresults

[ANALYZER]
JOBDB_NAME = jobdb
CONFIGDB_NAME = configdb
METRICDB_NAME = metricdb
RESULTDB_NAME = resultdb
NODETYPE_COLLECTION = nodetypes
APP_COLLECTION = applications
CALIBRATION_COLLECTION = calibration
PROFILING_COLLECTION = profiling
SIZING_COLLECTION = sizing
CORRELATION_COLLECTION = correlation
K8S_SERVICE_COLLECTION = k8sservices
PROBLEM_COLLECTION = problems
DIAGNOSIS_COLLECTION = diagnoses
INCIDENT_COLLECTION = incidents
RISK_COLLECTION = risks
OPPORTUNITY_COLLECTION = opportunities
MY_REGION = us-east-1
COST_TYPE = LinuxReserved
DEPLOY_JSON = ../hyperpilot-demo/workloads/alpha-demo/deploy-k8s-bad.json
RECOMMENDED_DEPLOY_JSON = ../hyperpilot-demo/workloads/alpha-demo/deploy-k8s-good.json
LOGLEVEL = DEBUG
DELAY_INTERVAL_SECOND = 5
# Sampling interval (in seconds) of the raw data
SAMPLE_INTERVAL_SECOND = 5
# Time interval (in seconds) the analyzer will wait before pulling new data
DIAGNOSIS_INTERVAL_SECOND = 30
# Time window (in seconds) the analyzer will use for average severity
AVERAGE_WINDOW_SECOND = 60
# Time window (in seconds) the analyzer will use for calculating correlation
CORRELATION_WINDOW_SECOND = 300
DERIVED_SLO_CONFIG = ./diagnosis/derived_slo_metric_config.json
DERIVED_METRICS_CONFIG = ./diagnosis/derived_metrics_config.json
DERIVED_METRIC_TEST_CONFIG = ./diagnosis/test_derived_metrics_config.json
REMEDIATIONS_CONFIG = ./diagnosis/remediations_config.json
AREA_THRESHOLD = 9
FREQUENCY_THRESHOLD = 50
CORR_SIGNIF_THRESHOLD = .02
SEVERITY_COMPUTE_TYPE = AREA
APP_NAME = tech-demo
DIAGNOSIS_TIMEOUT_WINDOW_SECOND = 300
ROLLBAR_ENV_NAME = dev
ROLLBAR_TOKEN = 76c61ec328094c7a9be059b5bb167e5c

[UTILIZATION]
ANALYSIS_WINDOW_SECOND = 300
PERCENTILES = [.5, .95, .99]
# default stat value for computing recommendations; choose from [mean, median, p95, p99, max]
DEFAULT_STAT_TYPE = p99
DEFAULT_SCALING_FACTOR = 1.25
MEMORY_BASE_METRIC = usage
MIN_CPU_LIMITS = 0.05
NODE_GROUP_TAGS = instance
CONTAINER_GROUP_TAGS = image
RESULTDB_NAME = resultdb
SIZING_RESULTS_COLLECTION = sizingresults

LOGLEVEL = INFO

[TEST]
LOGLEVEL = INFO

[BAYESIAN_OPTIMIZER]
RANDOM_SAMPLES = 100000
RANDOM_SEEDS = 250
LOGLEVEL = INFO

[BAYESIAN_OPTIMIZER_SESSION]
INIT_SAMPLES = 3
MIN_SAMPLES = 10
MAX_SAMPLES = 20
MIN_IMPROVEMENT = 0.05
# Choose one or more from perf_over_cost, cost_given_perf_limit, perf_given_cost_limit
BO_OBJECTIVES = perf_over_cost
#BO_OBJECTIVES = cost_given_perf_limit
#BO_OBJECTIVES = perf_given_cost_limit
MAX_WORKERS_PER_SESSION = 3
LOGLEVEL = DEBUG

[APP]
LOGLEVEL = DEBUG
